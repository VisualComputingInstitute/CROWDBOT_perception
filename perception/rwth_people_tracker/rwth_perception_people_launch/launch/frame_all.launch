<launch>
    <!-- Global parameters -->
    <!-- Nodes -->
    <arg name="mira_ros_adapter" default="false" />
    <arg name="kinect2_bridge" default="false" />
    <!-- VO -->
    <arg name="motion_parameters" value="/motion_matrix" />
    <arg name="sensor_frame_id" value="/hardware/depth/kinect2/ColorImageFrame" />
    <arg name="odom_frame_id" value="/robot/OdometryFrame" />
    <!-- GP -->
    <arg name="ground_plane" value="/ground_plane" />
    <arg name="rate" default="30.0"/>
    <arg name="base_footprint" value="/robot/BaseFrame" />
    <arg name="camera_frame" value="/hardware/depth/kinect2/ColorImageFrame" />
    <!-- detectors -->
    <arg name="upper_body" default="true"/>
    <arg name="hog" default="false"/>
    <arg name="camera_namespace" value="/hardware/depth/kinect2"/>
    <arg name="upperbody_detections" default="/upper_body_detector/detections" />
    <arg name="groundHOG_detections" value="/groundHOG/detections" />
    <arg name="detected_persons_upperbody" default="/detected_persons/upper_body" />
    <arg name="detected_persons_groundHOG" default="/detected_persons/groundHOG" />
    <!-- tracker -->
    <!-- /Global parameters -->
    
    <!-- MIRA-ROS-Adapter -->
    <include file="$(find mira_ros_adapter)/launch/mira_ros_adapter.launch" if="$(arg mira_ros_adapter)" />

    <!-- kinect2_bridge -->
    <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch" if="$(arg kinect2_bridge)" />

    <!-- Visual Odometry -->
    <include file="$(find odometry_to_motion_matrix)/launch/tf2visual.launch">
        <arg name="motion_parameters" value="$(arg motion_parameters)" />
        <arg name="sensor_frame_id" value="$(arg sensor_frame_id)" />
        <arg name="odom_frame_id" value="$(arg odom_frame_id)" />
    </include>

    <!-- Ground Plane -->
    <include file="$(find rwth_ground_plane)/launch/ground_plane_tf_based_fixed.launch">
        <arg name="base_footprint" value="$(arg base_footprint)" />
        <arg name="camera_frame" value="$(arg camera_frame)" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="rate" value="$(arg rate)"/>
    </include>

    <!-- Upper Body Detector -->
    <include file="$(find rwth_upper_body_detector)/launch/upper_body_detector.launch" if="$(arg upper_body)">
        <arg name="detected_persons" value="$(arg detected_persons_upperbody)"/>
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="upper_body_detections" value="$(arg upperbody_detections)" />
        <arg name="upper_body_bb_centres" value="/upper_body_detector/bounding_box_centres" />
        <arg name="upper_body_image" value="/upper_body_detector/image" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="detection_id_offset" value="3"/>
        <arg name="detection_id_increment" value="20"/>
        <arg name="queue_size" value="10" />
    </include>

    <!-- Ground HOG -->
    <include file="$(find rwth_ground_hog)/launch/ground_hog_with_GP.launch" if="$(arg hog)">
        <arg name="world_scale" value="0.001"/>
        <arg name="score_thresh" value="0.1"/>
        <arg name="detected_persons" value="$(arg detected_persons_groundHOG)"/>
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="detections" value="$(arg groundHOG_detections)" />
        <arg name="result_image" value="/groundHOG/image" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="detection_id_offset" value="4"/>
        <arg name="detection_id_increment" value="20"/>
        <arg name="queue_size" value="10" />
    </include>

    <!-- Pedestrian Tracking -->
    <include if="$(arg hog)" file="$(find rwth_pedestrian_tracking)/launch/pedestrian_tracking.launch">
        <arg name="camera_namespace" value="$(arg camera_namespace)" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="ground_hog" value="$(arg detected_persons_groundHOG)" />
        <arg name="upper_body_detections" value="$(arg detected_persons_upperbody)" />
        <arg name="visual_odometry" value="$(arg motion_parameters)" />
        <arg name="pedestrian_array" value="/rwth_tracker/pedestrian_array" />
        <arg name="pedestrian_image" value="/rwth_tracker/image" />
        <arg name="tracked_persons" value="/rwth_tracker/tracked_persons" />
        <arg name="queue_size" value="10" />
    </include>

    <include unless="$(arg hog)" file="$(find rwth_pedestrian_tracking)/launch/pedestrian_tracking_no_HOG.launch">
        <arg name="camera_namespace" value="$(arg camera_namespace)" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="upper_body_detections" value="$(arg detected_persons_upperbody)" />
        <arg name="visual_odometry" value="$(arg motion_parameters)" />
        <arg name="pedestrian_array" value="/rwth_tracker/pedestrian_array" />
        <arg name="pedestrian_image" value="/rwth_tracker/image" />
        <arg name="tracked_persons" value="/rwth_tracker/tracked_persons" />
        <arg name="queue_size" value="10" />
    </include>

    <!-- Pedestrian Localisation 
    <include file="$(find rwth_pedestrian_localisation)/launch/pedestrian_localisation.launch">
        <arg name="target_frame" value="$(arg tf_target_frame)"/>
        <arg name="pedestrian_array" value="$(arg pedestrian_array)"/>
        <arg name="localisations" value="$(arg pd_localisations)"/>
        <arg name="marker" value="$(arg pd_marker)"/>
    </include> -->


</launch> 
