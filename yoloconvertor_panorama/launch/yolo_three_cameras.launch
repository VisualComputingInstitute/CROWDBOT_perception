<launch>

<!-- this launch file should like, run 3 yolov3, run 3 yolo convertor, and run 3 ground plane...>

    <!-- GP -->
    <arg name="rate" default="30.0"/>
    <arg name="base_footprint" value="/robot/BaseFrame" />
    <arg name="camera_frame" value="/hardware/video/valeo/ValeoLeftImageFrame" />
    <arg name="ground_plane" default="/ground_plane" />

    <!-- general yolo-v3 arg -->
    <!-- Console launch prefix -->
    <arg name="launch_prefix" default=""/>
    <!-- Config and weights folder. -->
    <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
    <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>


    <!-- general yoloconvertor_panorama arg-->
    <arg name="detection_id_offset" default="0"/>
    <arg name="detection_id_increment" default="1"/>
    <arg name="world_scale" default="0.001"/>
    <arg name="queue_size" default="10" />

    <!-- left yoloconvertor and yolo arg-->
    <arg name="pano_image_left" default="/hardware/video/valeo/rectificationNIKRLeft/PanoramaImage" />
    <arg name="detected_persons_left" default="/yoloconvertor_pano/detected_persons_left"/>
    <arg name="bounding_boxes_left" default="darknet_ros/bounding_boxes_left"/>







    <!-- left yoloconvertor and yolo-->
    <!-- Start darknet and ros wrapper -->
    <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros_left" output="screen" launch-prefix="$(arg launch_prefix)">
      <!-- Load parameters -->
      <rosparam command="load" ns="darknet_ros" file="$(find yoloconvertor_panorama)/config/ros_left_pano.yaml"/>
      <rosparam command="load" ns="darknet_ros" file="$(find yoloconvertor_panorama)/config/yolov3.yaml"/>
      <param name="weights_path"          value="$(arg yolo_weights_path)" />
      <param name="config_path"           value="$(arg yolo_config_path)" />
    </node>



    <node pkg="yoloconvertor_panorama" type="convert_yolo_panorama" name="convert_yolo_panorama" output="screen">
        <param name="world_scale" value="$(arg world_scale)"/>
        <param name="ground_plane" value="$(arg ground_plane)" type="string"/>
        <param name="queue_size" value="$(arg queue_size)" type="int"/>
   
        <param name="pano_image" value="$(arg pano_image)" type="string"/>
        <param name="detected_persons" value="$(arg detected_persons)" type="string"/>
        <param name="detection_id_offset" value="$(arg detection_id_offset)"/>
        <param name="detection_id_increment" value="$(arg detection_id_increment)"/>
        <param name="bounding_boxes" value="$(arg bounding_boxes)"/>
    </node>


    <!-- Ground Plane -->
    <include file="$(find rwth_ground_plane)/launch/ground_plane_tf_based_fixed.launch">
        <arg name="base_footprint" value="$(arg base_footprint)" />
        <arg name="camera_frame" value="$(arg camera_frame)" />
        <arg name="ground_plane" value="$(arg ground_plane)" />
        <arg name="rate" value="$(arg rate)"/>
    </include>









</launch> 	
